-- Procedimiento para insertar STATUS registros
CREATE OR REPLACE PROCEDURE INSERTAR_FIDE_STATUS_TB_SP
(
    P_STATUS_ID    IN NUMBER,
    P_DESCRIPTION  IN VARCHAR2,
    P_CREATED_BY   IN VARCHAR2,
    P_CREATED_ON   IN TIMESTAMP
)
IS
BEGIN
    INSERT INTO FIDE_SAMDESIGN.FIDE_STATUS_TB(Status_ID, Description, Created_By, Created_On)
    VALUES (P_STATUS_ID, P_DESCRIPTION, P_CREATED_BY, P_CREATED_ON);
    COMMIT;
END INSERTAR_FIDE_STATUS_TB_SP;

-- Procedimiento para modificar STATUS registros
CREATE OR REPLACE PROCEDURE MODIFICAR_FIDE_STATUS_TB_SP
(
    P_STATUS_ID    IN NUMBER,
    P_DESCRIPTION  IN VARCHAR2,
    P_MODIFIED_BY  IN VARCHAR2,
    P_MODIFIED_ON  IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_STATUS_TB
    SET Description = P_DESCRIPTION,
        Modified_By = P_MODIFIED_BY,
        Modified_On = P_MODIFIED_ON
    WHERE Status_ID = P_STATUS_ID;
    COMMIT;
END MODIFICAR_FIDE_STATUS_TB_SP;

-- Procedimiento para eliminar STATUS registros
CREATE OR REPLACE PROCEDURE ELIMINAR_FIDE_STATUS_TB_SP
(
    P_STATUS_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM FIDE_SAMDESIGN.FIDE_STATUS_TB WHERE Status_ID = P_STATUS_ID;
    COMMIT;
END ELIMINAR_FIDE_STATUS_TB_SP;


-- Procedimiento para insertar ROL registros
CREATE OR REPLACE PROCEDURE INSERTAR_FIDE_ROL_TB_SP
(
    P_ROL_ID      IN NUMBER,
    P_ROL_NAME    IN VARCHAR2,
    P_STATUS_ID   IN NUMBER,
    P_CREATED_BY  IN VARCHAR2,
    P_CREATED_ON  IN TIMESTAMP
)
IS
BEGIN
    INSERT INTO FIDE_SAMDESIGN.FIDE_ROL_TB(rol_id, rol_name, Status_ID, Created_By, Created_On)
    VALUES (P_ROL_ID, P_ROL_NAME, P_STATUS_ID, P_CREATED_BY, P_CREATED_ON);
    COMMIT;
END INSERTAR_FIDE_ROL_TB_SP;

-- Procedimiento para modificar ROL registros
CREATE OR REPLACE PROCEDURE MODIFICAR_FIDE_ROL_TB_SP
(
    P_ROL_ID      IN NUMBER,
    P_ROL_NAME    IN VARCHAR2,
    P_STATUS_ID   IN NUMBER,
    P_MODIFIED_BY IN VARCHAR2,
    P_MODIFIED_ON IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_ROL_TB
    SET rol_name    = P_ROL_NAME,
        Status_ID   = P_STATUS_ID,
        Modified_By = P_MODIFIED_BY,
        Modified_On = P_MODIFIED_ON
    WHERE rol_id = P_ROL_ID;
    COMMIT;
END MODIFICAR_FIDE_ROL_TB_SP;

-- Procedimiento para eliminar ROL registros
CREATE OR REPLACE PROCEDURE ELIMINAR_FIDE_ROL_TB_SP
(
    P_ROL_ID IN NUMBER,
    P_MODIFIED_BY IN VARCHAR2,
    P_MODIFIED_ON IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_ROL_TB
    SET Status_ID   = 0,
        Modified_By = P_MODIFIED_BY,
        Modified_On = P_MODIFIED_ON
    WHERE rol_id = P_ROL_ID;
    COMMIT;
END ELIMINAR_FIDE_ROL_TB_SP;

-- Procedimiento para insertar USERS
CREATE OR REPLACE PROCEDURE INSERTAR_FIDE_USERS_TB_SP
(
    P_USER_ID     IN NUMBER,
    P_USER_NAME   IN VARCHAR2,
    P_USER_EMAIL  IN VARCHAR2,
    P_PASSWORD    IN VARCHAR2,
    P_ROL_ID      IN NUMBER,
    P_STATUS_ID   IN NUMBER,
    P_CREATED_BY  IN VARCHAR2,
    P_CREATED_ON  IN TIMESTAMP
)
IS
BEGIN
    INSERT INTO FIDE_SAMDESIGN.FIDE_USERS_TB(User_ID, User_Name, User_Email, Password, Rol_ID, Status_ID, Created_By, Created_On)
    VALUES (P_USER_ID, P_USER_NAME, P_USER_EMAIL, P_PASSWORD, P_ROL_ID, P_STATUS_ID, P_CREATED_BY, P_CREATED_ON);
    COMMIT;
END INSERTAR_FIDE_USERS_TB_SP;

-- Procedimiento para modificar USERS
CREATE OR REPLACE PROCEDURE MODIFICAR_FIDE_USERS_TB_SP
(
    P_USER_ID     IN NUMBER,
    P_USER_NAME   IN VARCHAR2,
    P_USER_EMAIL  IN VARCHAR2,
    P_PASSWORD    IN VARCHAR2,
    P_ROL_ID      IN NUMBER,
    P_STATUS_ID   IN NUMBER,
    P_MODIFIED_BY IN VARCHAR2,
    P_MODIFIED_ON IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_USERS_TB
    SET User_Name   = P_USER_NAME,
        User_Email  = P_USER_EMAIL,
        Password    = P_PASSWORD,
        Rol_ID      = P_ROL_ID,
        Status_ID   = P_STATUS_ID,
        Modified_By = P_MODIFIED_BY,
        Modified_On = P_MODIFIED_ON
    WHERE User_ID = P_USER_ID;
    COMMIT;
END MODIFICAR_FIDE_USERS_TB_SP;

-- Procedimiento para desactivar USERS
CREATE OR REPLACE PROCEDURE ELIMINAR_FIDE_USERS_TB_SP
(
    P_USER_ID     IN NUMBER,
    P_MODIFIED_BY IN VARCHAR2,
    P_MODIFIED_ON IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_USERS_TB
    SET Status_ID   = 0,
        Modified_By = P_MODIFIED_BY,
        Modified_On = P_MODIFIED_ON
    WHERE User_ID = P_USER_ID;
    COMMIT;
END ELIMINAR_FIDE_USERS_TB_SP;

-- Procedimiento para insertar CATEGORY
CREATE OR REPLACE PROCEDURE INSERTAR_FIDE_CATEGORY_TYPE_TB_SP
(
    P_CATEGORY_ID IN NUMBER,
    P_DESCRIPTION IN VARCHAR2,
    P_COMMENTS    IN VARCHAR2,
    P_STATUS_ID   IN NUMBER,
    P_CREATED_BY  IN VARCHAR2,
    P_CREATED_ON  IN TIMESTAMP
)
IS
BEGIN
    INSERT INTO FIDE_SAMDESIGN.FIDE_CATEGORY_TYPE_TB(Category_ID, Description, Comments, Status_ID, Created_By, Created_On)
    VALUES (P_CATEGORY_ID, P_DESCRIPTION, P_COMMENTS, P_STATUS_ID, P_CREATED_BY, P_CREATED_ON);
    COMMIT;
END INSERTAR_FIDE_CATEGORY_TYPE_TB_SP;

-- Procedimiento para modificar CATEGORY
CREATE OR REPLACE PROCEDURE MODIFICAR_FIDE_CATEGORY_TYPE_TB_SP
(
    P_CATEGORY_ID IN NUMBER,
    P_DESCRIPTION IN VARCHAR2,
    P_COMMENTS    IN VARCHAR2,
    P_STATUS_ID   IN NUMBER,
    P_MODIFIED_BY IN VARCHAR2,
    P_MODIFIED_ON IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_CATEGORY_TYPE_TB
    SET Description = P_DESCRIPTION,
        Comments    = P_COMMENTS,
        Status_ID   = P_STATUS_ID,
        Modified_By = P_MODIFIED_BY,
        Modified_On = P_MODIFIED_ON
    WHERE Category_ID = P_CATEGORY_ID;
    COMMIT;
END MODIFICAR_FIDE_CATEGORY_TYPE_TB_SP;

-- Procedimiento para desactivar CATEGORY 
CREATE OR REPLACE PROCEDURE ELIMINAR_FIDE_CATEGORY_TYPE_TB_SP
(
    P_CATEGORY_ID IN NUMBER,
    P_MODIFIED_BY IN VARCHAR2,
    P_MODIFIED_ON IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_CATEGORY_TYPE_TB
    SET Status_ID   = 0,
        Modified_By = P_MODIFIED_BY,
        Modified_On = P_MODIFIED_ON
    WHERE Category_ID = P_CATEGORY_ID;
    COMMIT;
END ELIMINAR_FIDE_CATEGORY_TYPE_TB_SP;

-- Procedimiento para insertar VENDOR
CREATE OR REPLACE PROCEDURE INSERTAR_FIDE_VENDOR_TB_SP
(
    P_VENDOR_ID         IN NUMBER,
    P_VENDOR_NAME       IN VARCHAR2,
    P_VENDOR_ADDRESS_ID IN NUMBER,
    P_VENDOR_EMAIL      IN VARCHAR2,
    P_VENDOR_BALANCE    IN FLOAT,
    P_CREATED_BY        IN VARCHAR2,
    P_CREATED_ON        IN TIMESTAMP,
    P_STATUS_ID         IN NUMBER
)
IS
BEGIN
    INSERT INTO FIDE_SAMDESIGN.FIDE_VENDOR_TB(Vendor_ID, Vendor_Name, Vendor_Address_ID, Vendor_eMail, Vendor_Balance, Created_By, Created_On, Status_ID)
    VALUES (P_VENDOR_ID, P_VENDOR_NAME, P_VENDOR_ADDRESS_ID, P_VENDOR_EMAIL, P_VENDOR_BALANCE, P_CREATED_BY, P_CREATED_ON, P_STATUS_ID);
    COMMIT;
END INSERTAR_FIDE_VENDOR_TB_SP;

-- Procedimiento para modificar VENDOR
CREATE OR REPLACE PROCEDURE MODIFICAR_FIDE_VENDOR_TB_SP
(
    P_VENDOR_ID         IN NUMBER,
    P_VENDOR_NAME       IN VARCHAR2,
    P_VENDOR_ADDRESS_ID IN NUMBER,
    P_VENDOR_EMAIL      IN VARCHAR2,
    P_VENDOR_BALANCE    IN FLOAT,
    P_STATUS_ID         IN NUMBER,
    P_MODIFIED_BY       IN VARCHAR2,
    P_MODIFIED_ON       IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_VENDOR_TB
    SET Vendor_Name        = P_VENDOR_NAME,
        Vendor_Address_ID  = P_VENDOR_ADDRESS_ID,
        Vendor_eMail       = P_VENDOR_EMAIL,
        Vendor_Balance     = P_VENDOR_BALANCE,
        Status_ID          = P_STATUS_ID,
        Modified_By        = P_MODIFIED_BY,
        Modified_On        = P_MODIFIED_ON
    WHERE Vendor_ID = P_VENDOR_ID;
    COMMIT;
END MODIFICAR_FIDE_VENDOR_TB_SP;

-- Procedimiento para desactivar VENDOR
CREATE OR REPLACE PROCEDURE ELIMINAR_FIDE_VENDOR_TB_SP
(
    P_VENDOR_ID   IN NUMBER,
    P_MODIFIED_BY IN VARCHAR2,
    P_MODIFIED_ON IN TIMESTAMP
)
IS
BEGIN
    UPDATE FIDE_SAMDESIGN.FIDE_VENDOR_TB
    SET Status_ID   = 0,
        Modified_By = P_MODIFIED_BY,
        Modified_On = P_MODIFIED_ON
    WHERE Vendor_ID = P_VENDOR_ID;
    COMMIT;
END ELIMINAR_FIDE_VENDOR_TB_SP;